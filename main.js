!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);var n=(e,t)=>({Name:t,Lengths:e,ships:{},fill_ship:e=>{const t=[];for(let r=0;r<e;r+=1)t.push("O");return t},hit:(e,t,r)=>{const n=e[r];return n[t]="X",n},isSunk:e=>{let t=!1;for(let r=0;r<e.length;r+=1){if("X"!==e[r]){t=!1;break}t=!0}return t}});var o=()=>({Board:[],BoardComputer:[],drawBoardPlayer:()=>{const e=[];for(let t=0;t<10;t+=1){const t=[];for(let e=0;e<10;e+=1)t[e]="-";e.push(t)}return e},placeShip:(e,t,r,n,o=!1)=>{const i=e,s=t;if(i.Name){const e=e=>{let t=!1;for(let o=0;o<i.Lengths;o+=1){if("-"!==e[n][r+o]){t=!1;break}t=!0}return t},t=e=>{let t=!1;for(let o=0;o<i.Lengths;o+=1){if("-"!==e[n+o][r]){t=!1;break}t=!0}return t};if(r+i.Lengths<=10&&e(s)&&!1===o)for(let e=0;e<i.Lengths;e+=1)s[n][r+e]=`${i.Name}${e}`;else if(n+i.Lengths<=10&&t(s)&&!0===o)for(let e=0;e<i.Lengths;e+=1)s[n+e][r]=`${i.Name}${e}`;else console.log("place your ship in a valid position")}return`X: ${n} - Y: ${r}, ${JSON.stringify(s)} `},receiveAtack:(e,t,r,n)=>{const o=n[0];let i="";const s=o.ships,l="-"===r[t][e];if(l)r[t][e]="X",i="Failed on:  X: "+e+" Y: "+t+"Empty Cell? :"+l;else{const n=r[t][e].split(""),a=n.splice(0,n.length-1).join(""),u=parseInt(n);o.hit(s,u,a),r[t][e]=`${a}X`,i=`${JSON.stringify(s)}- ${a} - ${u} \n Atacked on Pos; X: ${e}:   Y: ${t}:    Empty Cell ? : ${l}    \n BoardArr:  ${r}`}return i},checkShipsSunked:e=>{let t=!1;const r=e,n=r.ships.Cruiser,o=r.ships.Submarine,i=r.ships.Destroyer,s=r.ships.Carrier,l=r.ships.Battleship;return r.isSunk(n)&&r.isSunk(o)&&r.isSunk(s)&&r.isSunk(i)&&r.isSunk(l)&&(t=!0),t}});var i=e=>({Name:e,Turn:0,playerBoard:{name:e,Board:[]},computerBoard:{Board:[]},Move:(e,t,r,n,o)=>{if(0===e)return n.receiveAtack(t,r,n.BoardComputer,o),console.log(`Player Turn, Atacked on: X:${t} - Y: ${r}\nTo  Computer Board \n ${JSON.stringify(n.BoardComputer)}`),1;const i=parseInt(10*(0+Math.random()),10),s=parseInt(10*(0+Math.random()),10);return n.receiveAtack(i,s,n.Board,o),console.log(`Computer Turn, Atacked on: X:${i} - Y: ${s}\n To Player Board \n${JSON.stringify(n.Board)}`),[i,s]},playerInit:()=>{const e=n(5,"Carrier"),t=n(4,"Battleship"),r=n(3,"Cruiser"),o=n(3,"Submarine"),i=n(2,"Destroyer"),s=(e.ships,e.fill_ship(e.Lengths)),l=t.fill_ship(t.Lengths),a=r.fill_ship(r.Lengths),u=o.fill_ship(o.Lengths),p=i.fill_ship(i.Lengths);return e.ships[e.Name]=s,e.ships[t.Name]=l,e.ships[r.Name]=a,e.ships[o.Name]=u,e.ships[i.Name]=p,console.log(`Soy PLayer Init function: ${JSON.stringify(e.ships)}`),[e,t,r,o]},computerInit:()=>{const e=n(5,"Carrier"),t=n(4,"Battleship"),r=n(3,"Cruiser"),i=n(3,"Submarine"),s=n(2,"Destroyer"),l=(e.ships,e.fill_ship(e.Lengths)),a=t.fill_ship(t.Lengths),u=r.fill_ship(r.Lengths),p=i.fill_ship(i.Lengths),c=s.fill_ship(s.Lengths);e.ships[e.Name]=l,e.ships[t.Name]=a,e.ships[r.Name]=u,e.ships[i.Name]=p,e.ships[s.Name]=c;const h=o(),f=h.drawBoardPlayer();return h.placeShip(i,f,1,2,!0),h.placeShip(t,f,5,1,!1),h.placeShip(r,f,2,6,!0),h.placeShip(s,f,6,6,!1),h.placeShip(e,f,4,3,!1),console.log(`Soy Computer Init function: ${JSON.stringify(e)}`),[e,t,r,i,s,f]},fillPlayerMoves:e=>{for(let t=0;t<100;t+=1)e[t]=t+1;return e},fillComputerMoves:e=>{for(let t=0;t<100;t+=1)e[t]=t+1;return e}});(()=>{const e=(e,t)=>{for(let r=0;r<10;r+=1)for(let n=0;n<10;n+=1)if("-"!==e[r][n]){t[parseInt(`${r}${n}`,10)].innerText=e[r][n]}};return{render:()=>{const t=document.querySelector(".human"),r=document.querySelector(".computer");let n="";const s=o();for(let e=0;e<10;e+=1)for(let t=0;t<10;t+=1)n+=`<div data-position-x=${e} data-position-y=${t} class="box" id="box${e}${t}"></div>`;t.innerHTML=n,r.innerHTML=n;const l=document.getElementsByClassName("box"),a=document.getElementById("messages"),u=i("MephistoDevelop"),p=u.playerInit(),c=u.computerInit();let h=u.Turn;s.Board=s.drawBoardPlayer(),s.BoardComputer=c[5],e(s.BoardComputer,l);for(let e=l.length/2;e<l.length;e+=1){const t=l[e].getAttribute("data-position-x"),r=l[e].getAttribute("data-position-y");l[e].addEventListener("click",()=>{0===h&&(u.Turn=u.Move(u.Turn,t,r,s,p),a.innerText=`${i.Name} Turn ${JSON.stringify(p)}`,h=1,setTimeout(()=>{const e=u.Move(u.Turn,0,0,s,c),t=parseInt(`${e[0]}${e[1]}`,10);console.log(`Soy number:${t}`),l[t].style.backgroundImage="url('./img/ex.png')",h=0},1500)),l[e].style.backgroundImage=e%2==0?"url('./img/hole.png')":"url('./img/ex.png')"})}}}})().render()}]);