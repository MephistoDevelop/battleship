!function(e){var r={};function t(n){if(r[n])return r[n].exports;var i=r[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var i in e)t.d(n,i,function(r){return e[r]}.bind(null,i));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=0)}([function(e,r,t){"use strict";t.r(r);var n=(e,r)=>({Name:r,Lengths:e,ships:{},fill_ship:e=>{const r=[];for(let t=0;t<e;t+=1)r.push("O");return r},hit:(e,r,t)=>{const n=e[t];return n[r]="X",n},isSunk:e=>{let r=!1;for(let t=0;t<e.length;t+=1){if("X"!==e[t]){r=!1;break}r=!0}return r}});var i=()=>({Board:[],BoardComputer:[],drawBoardPlayer:()=>{const e=[];for(let r=0;r<10;r+=1){const r=[];for(let e=0;e<10;e+=1)r[e]="-";e.push(r)}return e},placeShip:(e,r,t,n,i=!1)=>{const s=e,o=r;if(s.Name){const e=e=>{let r=!1;for(let i=0;i<s.Lengths;i+=1){if("-"!==e[n][t+i]){r=!1;break}r=!0}return r},r=e=>{let r=!1;for(let i=0;i<s.Lengths;i+=1){if("-"!==e[n+i][t]){r=!1;break}r=!0}return r};if(t+s.Lengths<=10&&e(o)&&!1===i)for(let e=0;e<s.Lengths;e+=1)o[n][t+e]=`${s.Name}${e}`;else if(n+s.Lengths<=10&&r(o)&&!0===i)for(let e=0;e<s.Lengths;e+=1)o[n+e][t]=`${s.Name}${e}`;else console.log("place your ship in a valid position")}return`X: ${n} - Y: ${t}, ${JSON.stringify(o)} `},receiveAtack:(e,r,t,n)=>{const i=n[0];let s="";const o=i.ships,l="-"===t[r][e];if(l)t[r][e]="X",s="Failed on:  X: "+e+" Y: "+r+"Empty Cell? :"+l;else{const n=t[r][e].split(""),a=n.splice(0,n.length-1).join(""),u=parseInt(n);i.hit(o,u,a),t[r][e]=`${a}X`,s=`${JSON.stringify(o)}- ${a} - ${u} \n Atacked on Pos; X: ${e}:   Y: ${r}:    Empty Cell ? : ${l}    \n BoardArr:  ${t}`}return s},checkShipsSunked:e=>{let r=!1;const t=e,n=t.ships.Cruiser,i=t.ships.Submarine,s=t.ships.Destroyer,o=t.ships.Carrier,l=t.ships.Battleship;return t.isSunk(n)&&t.isSunk(i)&&t.isSunk(o)&&t.isSunk(s)&&t.isSunk(l)&&(r=!0),r}});var s=e=>({Name:e,Turn:0,playerBoard:{name:e,Board:[]},computerBoard:{Board:[]},Move:(e,r,t,n,i)=>{if(0===e)return n.receiveAtack(r,t,n.BoardComputer,i),console.log(`Player Turn, Atacked on: X:${r} - Y: ${t}\nTo  Computer Board \n ${JSON.stringify(n.BoardComputer)}`),1;const s=parseInt(10*(0+Math.random()),10),o=parseInt(10*(0+Math.random()),10);return n.receiveAtack(s,o,n.Board,i),console.log(`Computer Turn, Atacked on: X:${s} - Y: ${o}\n To Player Board \n${JSON.stringify(n.Board)}`),0},playerInit:()=>{const e=n(5,"Carrier"),r=n(4,"Battleship"),t=n(3,"Cruiser"),i=n(3,"Submarine"),s=n(2,"Destroyer"),o=(e.ships,e.fill_ship(e.Lengths)),l=r.fill_ship(r.Lengths),a=t.fill_ship(t.Lengths),u=i.fill_ship(i.Lengths),p=s.fill_ship(s.Lengths);return e.ships[e.Name]=o,e.ships[r.Name]=l,e.ships[t.Name]=a,e.ships[i.Name]=u,e.ships[s.Name]=p,console.log(`Soy PLayer Init function: ${JSON.stringify(e.ships)}`),[e,r,t,i]},computerInit:()=>{const e=n(5,"Carrier"),r=n(4,"Battleship"),t=n(3,"Cruiser"),s=n(3,"Submarine"),o=n(2,"Destroyer"),l=(e.ships,e.fill_ship(e.Lengths)),a=r.fill_ship(r.Lengths),u=t.fill_ship(t.Lengths),p=s.fill_ship(s.Lengths),c=o.fill_ship(o.Lengths);e.ships[e.Name]=l,e.ships[r.Name]=a,e.ships[t.Name]=u,e.ships[s.Name]=p,e.ships[o.Name]=c;const h=i(),d=h.drawBoardPlayer(),f=[{Submarine:[0,2,!0],Battleship:[3,2,!0],Cruiser:[5,1,!1],Destroyer:[0,0,!1],Carrier:[0,8,!1]},{Submarine:[0,0,!0],Battleship:[3,2,!0],Cruiser:[3,0,!0],Destroyer:[3,0,!0],Carrier:[5,8,!0]}];return h.placeShip(s,d,f[0].Submarine[0],f[0].Submarine[1],f[0].Submarine[2]),h.placeShip(r,d,f[0].Battleship[0],f[0].Battleship[1],f[0].Battleship[2]),h.placeShip(t,d,f[0].Cruiser[0],f[0].Cruiser[1],f[0].Cruiser[2]),h.placeShip(o,d,f[0].Destroyer[0],f[0].Destroyer[1],f[0].Destroyer[2]),h.placeShip(e,d,f[0].Carrier[0],f[0].Carrier[1],f[0].Carrier[2]),console.log(`Soy Computer Init function: ${JSON.stringify(e.ships)}`),[e,r,t,s,o,d]},fillPlayerMoves:e=>{for(let r=0;r<100;r+=1)e[r]=r+1;return e},fillComputerMoves:e=>{for(let r=0;r<100;r+=1)e[r]=r+1;return e}});const o=document.getElementById("checkbox"),l=document.getElementById("text-action"),a=document.getElementById("text-x"),u=document.getElementById("text-y"),p=document.getElementById("btn-start"),c=document.getElementById("btn-action"),h=document.getElementById("btn-place"),d=document.getElementById("messages");let f=!1,m=!1;const y=s("MephistoDevelop"),g=i();p.addEventListener("click",()=>{console.log("Started Game");y.fillPlayerMoves([]);d.innerText=`${y.Name} Turn`;y.playerInit();const e=y.computerInit(),r=i();r.Board=r.drawBoardPlayer(),r.BoardComputer=e[5],console.log(JSON.stringify(r))}),c.addEventListener("click",()=>{(()=>{l.value="";const e=a.value,r=u.value;0===y.Turn?(y.Turn=y.Move(y.Turn,e,r,g,null),d.innerText="Computer Turn \n"+JSON.stringify(null)):(y.Turn=y.Move(y.Turn,e,r,g,null),d.innerText=y.Name+"Turn \n"+JSON.stringify(null))})()}),h.addEventListener("click",()=>{(e=>{const r=parseInt(a.value,10),t=parseInt(u.value,10),n=l.value,i=parseInt(n,10),s=e[i];console.log(`X: ${r} Y: ${t} , ShiPos: ${i} , ChoosenShip: ${JSON.stringify(s)}`),console.log(g.placeShip(s,g.Board,r,t,m))})(null)}),o.addEventListener("click",()=>{f?(o.checked=!1,f=!1,m=!1):(o.checked=!0,f=!0,m=!0)})}]);