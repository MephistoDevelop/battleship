!function(e){var t={};function r(i){if(t[i])return t[i].exports;var c=t[i]={i:i,l:!1,exports:{}};return e[i].call(c.exports,c,c.exports,r),c.l=!0,c.exports}r.m=e,r.c=t,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var c in e)r.d(i,c,function(t){return e[t]}.bind(null,c));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);var i=(e,t)=>({Name:t,Lengths:e,ships:{},fill_ship:e=>{const t=[];for(let r=0;r<e;r+=1)t.push("O");return t},hit:(e,t,r)=>{const i=e[r];return i[t]="X",i},isSunk:e=>{let t=!1;for(let r=0;r<e.length;r+=1){if("X"!==e[r]){t=!1;break}t=!0}return t}});var c=()=>({drawBoard:()=>{const e=[];for(let t=0;t<10;t+=1){const t=[];for(let e=0;e<10;e+=1)t[e]="-";e.push(t)}return e},placeShip:(e,t,r,i,c=!1)=>{const o=e,s=t;if(o.Name){const e=e=>{let t=!1;for(let c=0;c<o.Lengths;c+=1){if("-"!==e[i][r+c]){t=!1;break}t=!0}return t};if(r+o.Lengths<=10&&e(s))for(let e=0;e<o.Lengths;e+=1)s[i][r+e]=`${o.Name}${e}`;else console.log("place your ship in a valid position")}return`X: ${i} - Y: ${r}, ${JSON.stringify(s)} `},receiveAtack:(e,t,r,i)=>{const c=i;let o="";const s=c.ships,n="-"===r[t][e];if(console.log("im board on Position["+t+"]["+e+"]:"),n)r[t][e]="X",o="Failed on:  X: "+e+" Y: "+t+"Empty Cell? :"+n;else{console.log(s);const i=r[t][e].split(""),a=i.splice(0,i.length-1).join(""),l=parseInt(i);c.hit(s,l,a),r[t][e]=`${a}X`,o=`${JSON.stringify(s)}- ${a} - ${l} \n Atacked on Pos; X: ${e}:   Y: ${t}:    Empty Cell ? : ${n}    \n BoardArr:  ${r}`}return o},checkShipsSunked:e=>{let t=!1;const r=e,i=r.ships.Cruiser,c=r.ships.Submarine,o=r.ships.Destroyer,s=r.ships.Carrier,n=r.ships.Battleship;return r.isSunk(i)&&r.isSunk(c)&&r.isSunk(s)&&r.isSunk(o)&&r.isSunk(n)&&(t=!0),t}});(()=>{const e=i(5,"Carrier"),t=i(4,"Battleship"),r=i(3,"Cruiser"),o=i(3,"Submarine"),s=i(2,"Destroyer");e.ships;const n=e.fill_ship(e.Lengths),a=t.fill_ship(t.Lengths),l=r.fill_ship(r.Lengths),p=o.fill_ship(o.Lengths),u=s.fill_ship(s.Lengths);e.ships[e.Name]=n,e.ships[t.Name]=a,e.ships[r.Name]=l,e.ships[o.Name]=p,e.ships[s.Name]=u,JSON.stringify(e.ships);const h=c();let f=h.drawBoard();console.log("im the  board:  "+f),h.placeShip(o,f,0,2,!0),h.placeShip(t,f,3,2,!0),h.placeShip(r,f,3,0,!0),h.placeShip(s,f,6,7,!0),console.log("placedship Carrier: "+h.placeShip(e,f,5,8,!0)+" - "),h.receiveAtack(3,0,f,e),h.receiveAtack(4,0,f,e),console.log("Received atack: "+h.receiveAtack(5,0,f,e)),h.receiveAtack(0,2,f,e),h.receiveAtack(1,2,f,e),console.log("Received atack Submarine: "+h.receiveAtack(2,2,f,e)),h.receiveAtack(3,2,f,e),h.receiveAtack(4,2,f,e),h.receiveAtack(5,2,f,e),console.log("Received atack Battleship: "+h.receiveAtack(6,2,f,e)),h.receiveAtack(6,7,f,e),console.log("Received atack Destroyer: "+h.receiveAtack(7,7,f,e)),h.receiveAtack(5,8,f,e),h.receiveAtack(6,8,f,e),h.receiveAtack(7,8,f,e),h.receiveAtack(8,8,f,e),console.log("Received atack: Carrier "+h.receiveAtack(9,8,f,e)),console.log("Received atack: Missed "+h.receiveAtack(0,1,f,e)),console.log("Received atack: Missed "+h.receiveAtack(5,4,f,e)),console.log("Received atack: Missed "+h.receiveAtack(7,5,f,e)),console.log("Board Array: "+f),console.log("Check Sunked Ships or Not:  "+h.checkShipsSunked(e))})()}]);