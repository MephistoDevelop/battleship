!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);var n=(e,t)=>({Name:t,Lengths:e,ships:{},fill_ship:e=>{const t=[];for(let r=0;r<e;r+=1)t.push("O");return t},hit:(e,t,r)=>{const n=e[r];return n[t]="X",n},isSunk:e=>{let t=!1;for(let r=0;r<e.length;r+=1){if("X"!==e[r]){t=!1;break}t=!0}return t}});var o=()=>({Board:[],BoardComputer:[],drawBoardPlayer:()=>{const e=[];for(let t=0;t<10;t+=1){const t=[];for(let e=0;e<10;e+=1)t[e]="-";e.push(t)}return e},placeShip:(e,t,r,n,o=!1)=>{const s=e,i=t;if(s.Name){const e=e=>{let t=!1;for(let o=0;o<s.Lengths;o+=1){if("-"!==e[n][r+o]){t=!1;break}t=!0}return t},t=e=>{let t=!1;for(let o=0;o<s.Lengths;o+=1){if("-"!==e[n+o][r]){t=!1;break}t=!0}return t};if(r+s.Lengths<=10&&e(i)&&!1===o)for(let e=0;e<s.Lengths;e+=1)i[n][r+e]=`${s.Name}${e}`;else if(n+s.Lengths<=10&&t(i)&&!0===o)for(let e=0;e<s.Lengths;e+=1)i[n+e][r]=`${s.Name}${e}`;else console.log("place your ship in a valid position")}return`X: ${n} - Y: ${r}, ${JSON.stringify(i)} `},receiveAtack:(e,t,r,n)=>{const o=n[0];let s="";const i=o.ships,l="-"===r[t][e];if(l)r[t][e]="X",s="Failed on:  X: "+e+" Y: "+t+"Empty Cell? :"+l;else{const n=r[t][e].split(""),a=n.splice(0,n.length-1).join(""),u=parseInt(n);o.hit(i,u,a),r[t][e]=`${a}X`,s=`${JSON.stringify(i)}- ${a} - ${u} \n Atacked on Pos; X: ${e}:   Y: ${t}:    Empty Cell ? : ${l}    \n BoardArr:  ${r}`}return s},checkShipsSunked:e=>{let t=!1;const r=e,n=r.ships.Cruiser,o=r.ships.Submarine,s=r.ships.Destroyer,i=r.ships.Carrier,l=r.ships.Battleship;return r.isSunk(n)&&r.isSunk(o)&&r.isSunk(i)&&r.isSunk(s)&&r.isSunk(l)&&(t=!0),t}});var s=e=>({Name:e,Turn:0,playerBoard:{name:e,Board:[]},computerBoard:{Board:[]},Move:(e,t,r,n,o)=>{if(0===e)return n.receiveAtack(t,r,n.BoardComputer,o),console.log(`Player Turn, Atacked on: X:${t} - Y: ${r}\nTo  Computer Board \n ${JSON.stringify(n.BoardComputer)}`),1;const s=parseInt(10*(0+Math.random()),10),i=parseInt(10*(0+Math.random()),10);return n.receiveAtack(s,i,n.Board,o),console.log(`Computer Turn, Atacked on: X:${s} - Y: ${i}\n To Player Board \n${JSON.stringify(n.Board)}`),0},playerInit:()=>{const e=n(5,"Carrier"),t=n(4,"Battleship"),r=n(3,"Cruiser"),o=n(3,"Submarine"),s=n(2,"Destroyer"),i=(e.ships,e.fill_ship(e.Lengths)),l=t.fill_ship(t.Lengths),a=r.fill_ship(r.Lengths),u=o.fill_ship(o.Lengths),c=s.fill_ship(s.Lengths);return e.ships[e.Name]=i,e.ships[t.Name]=l,e.ships[r.Name]=a,e.ships[o.Name]=u,e.ships[s.Name]=c,console.log(`Soy PLayer Init function: ${JSON.stringify(e.ships)}`),[e,t,r,o]},computerInit:()=>{const e=n(5,"Carrier"),t=n(4,"Battleship"),r=n(3,"Cruiser"),s=n(3,"Submarine"),i=n(2,"Destroyer"),l=(e.ships,e.fill_ship(e.Lengths)),a=t.fill_ship(t.Lengths),u=r.fill_ship(r.Lengths),c=s.fill_ship(s.Lengths),p=i.fill_ship(i.Lengths);e.ships[e.Name]=l,e.ships[t.Name]=a,e.ships[r.Name]=u,e.ships[s.Name]=c,e.ships[i.Name]=p;const h=o(),d=h.drawBoardPlayer();return h.placeShip(s,d,0,2,!0),h.placeShip(t,d,3,2,!0),h.placeShip(r,d,3,0,!0),h.placeShip(i,d,6,7,!0),h.placeShip(e,d,5,8,!0),console.log(`Soy Computer Init function: ${JSON.stringify(e.ships)}`),[e,t,r,s,i,d]},fillPlayerMoves:e=>{for(let t=0;t<100;t+=1)e[t]=t+1;return e},fillComputerMoves:e=>{for(let t=0;t<100;t+=1)e[t]=t+1;return e}});({render:()=>{const e=document.querySelector(".human"),t=document.querySelector(".computer");let r="";for(let e=0;e<100;e+=1)for(let e=0;e<10;e+=1)for(let t=0;t<10;t+=1)r+=`<div data-position-x=${e} data-position-y=${t} class="box"></div>`;e.innerHTML=r,t.innerHTML=r}}).render();const i=document.getElementById("checkbox"),l=document.getElementById("text-action"),a=document.getElementById("text-x"),u=document.getElementById("text-y"),c=document.getElementById("btn-action"),p=document.getElementById("btn-place"),h=document.getElementById("messages");let d=!1,f=!1;const m=s("MephistoDevelop");m.fillPlayerMoves([]);h.innerText=`${m.Name} Turn`;const g=m.playerInit(),y=m.computerInit(),S=o();S.Board=S.drawBoardPlayer(),S.BoardComputer=y[5],console.log(JSON.stringify(S));c.addEventListener("click",()=>{(()=>{console.log(`clicked me !! \n Box: ${l.value}`),l.value="";const e=a.value,t=u.value,r=m.Turn;0===r?(m.Turn=m.Move(m.Turn,e,t,S,g),h.innerText="Computer Turn"):(m.Turn=m.Move(m.Turn,e,t,S,y),h.innerText=m.Name+"Turn",console.log(`Computer.Turn: ${r} - ${0===r}`))})()}),p.addEventListener("click",()=>{(e=>{const t=parseInt(a.value,10),r=parseInt(u.value,10),n=l.value,o=parseInt(n,10),s=e[o];console.log(`X: ${t} Y: ${r} , ShiPos: ${o} , ChoosenShip: ${JSON.stringify(s)}`),console.log(S.placeShip(s,S.Board,t,r,f))})(g)}),i.addEventListener("click",()=>{d?(i.checked=!1,d=!1,f=!1):(i.checked=!0,d=!0,f=!0)})}]);