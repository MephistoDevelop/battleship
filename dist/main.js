!function(e){var r={};function t(n){if(r[n])return r[n].exports;var s=r[n]={i:n,l:!1,exports:{}};return e[n].call(s.exports,s,s.exports,t),s.l=!0,s.exports}t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var s in e)t.d(n,s,function(r){return e[r]}.bind(null,s));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=0)}([function(e,r,t){"use strict";t.r(r);var n=(e,r)=>({Name:r,Lengths:e,ships:{},fill_ship:e=>{const r=[];for(let t=0;t<e;t+=1)r.push("O");return r},hit:(e,r,t)=>{const n=e[t];return n[r]="X",n},isSunk:e=>{let r=!1;for(let t=0;t<e.length;t+=1){if("X"!==e[t]){r=!1;break}r=!0}return r}});var s=()=>({Board:[],BoardComputer:[],drawBoardPlayer:()=>{const e=[];for(let r=0;r<10;r+=1){const r=[];for(let e=0;e<10;e+=1)r[e]="-";e.push(r)}return e},placeShip:(e,r,t,n,s=!1)=>{const i=e,o=r;if(i.Name){const e=e=>{let r=!1;for(let s=0;s<i.Lengths;s+=1){if("-"!==e[n][t+s]){r=!1;break}r=!0}return r};if(t+i.Lengths<=10&&e(o))for(let e=0;e<i.Lengths;e+=1)o[n][t+e]=`${i.Name}${e}`;else console.log("place your ship in a valid position")}return`X: ${n} - Y: ${t}, ${JSON.stringify(o)} `},receiveAtack:(e,r,t,n)=>{const s=n;let i="";const o=s.ships,l="-"===t[r][e];if(l)t[r][e]="X",i="Failed on:  X: "+e+" Y: "+r+"Empty Cell? :"+l;else{const n=t[r][e].split(""),a=n.splice(0,n.length-1).join(""),u=parseInt(n);s.hit(o,u,a),t[r][e]=`${a}X`,i=`${JSON.stringify(o)}- ${a} - ${u} \n Atacked on Pos; X: ${e}:   Y: ${r}:    Empty Cell ? : ${l}    \n BoardArr:  ${t}`}return i},checkShipsSunked:e=>{let r=!1;const t=e,n=t.ships.Cruiser,s=t.ships.Submarine,i=t.ships.Destroyer,o=t.ships.Carrier,l=t.ships.Battleship;return t.isSunk(n)&&t.isSunk(s)&&t.isSunk(o)&&t.isSunk(i)&&t.isSunk(l)&&(r=!0),r}});var i=e=>({Name:e,Turn:0,playerBoard:{name:e,Board:[]},computerBoard:{Board:[]},Move:(e,r,t,n,s)=>0===e?(n.receiveAtack(r,t,n.Board,s),console.log(e+" Player Turn, Atacked on: "+r+" - "+t+"\n Player Board \n"+JSON.stringify(n.Board)),1):(n.receiveAtack(r,t,n.BoardComputer,s),console.log("Computer Turn, Atacked on: "+r+" - "+t+"\n Computer Board \n"+JSON.stringify(n.computerBoard)),0),playerInit:()=>{const e=n(5,"Carrier"),r=n(4,"Battleship"),t=n(3,"Cruiser"),s=n(3,"Submarine"),i=n(2,"Destroyer"),o=(e.ships,e.fill_ship(e.Lengths)),l=r.fill_ship(r.Lengths),a=t.fill_ship(t.Lengths),u=s.fill_ship(s.Lengths),p=i.fill_ship(i.Lengths);return e.ships[e.Name]=o,e.ships[r.Name]=l,e.ships[t.Name]=a,e.ships[s.Name]=u,e.ships[i.Name]=p,console.log(`Soy PLayer Init function: ${JSON.stringify(e.ships)}`),e.ships},computerInit:()=>{const e=n(5,"Carrier"),r=n(4,"Battleship"),t=n(3,"Cruiser"),s=n(3,"Submarine"),i=n(2,"Destroyer"),o=(e.ships,e.fill_ship(e.Lengths)),l=r.fill_ship(r.Lengths),a=t.fill_ship(t.Lengths),u=s.fill_ship(s.Lengths),p=i.fill_ship(i.Lengths);return e.ships[e.Name]=o,e.ships[r.Name]=l,e.ships[t.Name]=a,e.ships[s.Name]=u,e.ships[i.Name]=p,console.log(`Soy Computer Init function: ${JSON.stringify(e.ships)}`),e.ships},fillPlayerMoves:e=>{for(let r=0;r<100;r+=1)e[r]=r+1;return e},fillComputerMoves:e=>{for(let r=0;r<100;r+=1)e[r]=r+1;return e}});(()=>{const e=i("MephistoDevelop"),r=(e.fillPlayerMoves([]),e.playerInit()),t=s();t.Board=t.drawBoardPlayer(),t.BoardComputer=t.drawBoardPlayer(),console.log(r),console.log(e.computerInit()),0===i.Turn?e.Turn=e.Move(e.Turn,0,1,t,r):e.Turn=e.Move(e.Turn,0,0,t,r)})()}]);